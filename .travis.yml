language: go

go:
  - tip

install:
  - go get gopkg.in/mgo.v2
  - go get github.com/gorilla/mux
  - go get github.com/stretchr/testify/assert

# Don't email me the results of the test runs.
notifications:
  email: false

#script:
#  - go list ./...
#  - go fmt ./...
#  - go vet $(go list ./... | grep -v /vendor/)
#  - go test -v -race $(go list ./... | grep -v /vendor/)

# Anything in before_script: that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash.
before_script:
  - GO_FILES=$(find . -iname '*.go' | grep -v /vendor/)  # All the .go files, excluding vendor/
  - PKGS=$(go list ./... | grep -v /vendor/)             # All the import paths, excluding vendor/
  #- go get github.com/golang/lint/golint                 # Linter
  - go get honnef.co/go/tools/cmd/megacheck              # Badass static analyzer/linter

# script always run to completion (set +e). All of these code checks are must haves
# in a modern Go project.
script:
  - test -z $(gofmt -s -l $GO_FILES)  # Fail if a .go file hasn't been formatted with gofmt
  - go test -v -race $PKGS            # Run all the tests with the race detector enabled
  - go vet $PKGS                      # go vet is the official Go static analyzer
  - megacheck $PKGS                   # "go vet on steroids" + linter
  #- golint -set_exit_status $PKGS    # one last linter
